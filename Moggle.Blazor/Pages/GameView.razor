@using Fluxor
@using System.Threading
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IDialogService Dialog

<MudElement Class="grid">
  @for (var row = 0; row < State.Value.Board.RowCount; row++)
  {
    var r = row;
    <MudElement Class="row">
      @for (var col = 0; col < State.Value.Board.ColumnCount; col++)
      {
        var coordinate = new Coordinate(r, col);
        <MudElement Class="cell">
          <MudButton
            Size="Size.Small"
            Class="aspectratio"
                     Color="@GetColor(coordinate)"
                     Disabled="@(!State.Value.IsMoveLegal(coordinate))"
                     OnClick="() => Dispatcher.Dispatch(new ChooseCellAction(coordinate))">
            @State.Value.GetLetterAtCoordinate(coordinate)
          </MudButton>

        </MudElement>
      }
    </MudElement>
  }
</MudElement>

<MudText Typo="Typo.h1">
  @State.Value.Score
</MudText>

<MudList>
  @foreach (var w in State.Value.FoundWords)
  {
    var word = w;
    <MudCheckBox
      Disabled="@(IsGameVisible)"
      CheckedChanged="(bool b) => { Dispatcher.Dispatch(new EnableWord(word, b)); }"
      Label=@word
      Checked="@(!State.Value.DisabledWords.Contains(word))"/>
  }
</MudList>

@code {

  [Inject]
  private IState<MoggleState> State { get; set; }

  [Inject]
  public IDispatcher Dispatcher { get; set; }

  public bool IsGameVisible => State.Value.FinishTime.HasValue;

  public Color GetColor(Coordinate coordinate)
  {
    if (!IsGameVisible || !State.Value.ChosenPositions.Any())
      return Color.Default;

    if (State.Value.ChosenPositions.Last() == coordinate)
      return Color.Primary;
    else if (State.Value.ChosenPositions.Contains(coordinate))
      return Color.Secondary;
    else if (State.Value.IsMoveLegal(coordinate))
      return Color.Success;
    else
      return Color.Dark;

  }

}

<style>

  .grid { max-width: 800px; }

  .row {
    display: flex;
    flex-wrap: wrap;
  }

  .cell {
    flex-basis: calc(100% / 4);
    float: left;
    padding: 1em;
  }

  .row .cell > * {
    @*background: @(IsGameVisible ? "#00ffff" : "#ff0000");*@
    elevation: above;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .aspectratio {
    width: 100%;
    height: 0;
    position: relative;
    padding-bottom: 50%;
    padding-top: 50%;
    font-family: monospace;
    font-size: 24.5vw;
  }
</style>
