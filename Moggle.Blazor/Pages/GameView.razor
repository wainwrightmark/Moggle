@using Fluxor
@using System.Threading
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IDialogService Dialog


@for (var row = 0; row < State.Value.Board.RowCount; row++)
{
  var r = row;
  <MudElement Class="row">
    @for (var col = 0; col < State.Value.Board.ColumnCount; col++)
    {
      var c = col;
      <MudElement Class="cell">
        <MudElement Class="aspectratio">
          @State.Value.GetLetterAtCoordinate(r, c)

        </MudElement>

      </MudElement>
    }
  </MudElement>
}


@code {

  [Inject]
  private IState<MoggleState> State { get; set; }

  [Inject]
  public IDispatcher Dispatcher { get; set; }

  public bool IsGameVisible => State.Value.FinishTime.HasValue;

}

<style>
  .row {
    display: flex;
    flex-wrap: wrap;
  }

  .cell {
    flex-basis: calc(100% / 4);
    float: left;
    padding: 1em;
  }

  .row .cell > * {
    background: @(IsGameVisible ? "#00ffff" : "#ff0000");
    elevation: above;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .aspectratio {
    width: 100%;
    height: 0;
    position: relative;
    padding-bottom: 50%;
    padding-top: 50%;
    font-family: monospace;
    font-size: 24.5vw;
  }
</style>
