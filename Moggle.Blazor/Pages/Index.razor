@page "/"
@inject NavigationManager NavigationManager


<GameView StartGameAction="_startGameAction" AllowCheating="_cheat"/>


@code
{

    /// <inheritdoc />
    protected override void OnParametersSet()
    {
      var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

      var parseDict = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);

      _cheat = parseDict.TryGetValue("cheat", out var ch) && bool.TryParse(ch, out var ch1) && ch1;

      //if (parseDict.TryGetValue("seed", out var sv))
      //{
      //  var width = parseDict.TryGetValue("width", out var w) && int.TryParse(w, out var w1) ? w1 : 4;
      //  var height = parseDict.TryGetValue("height", out var h) && int.TryParse(h, out var h1) ? h1 : 4;
      //  var duration = parseDict.TryGetValue("duration", out var d) && int.TryParse(d, out var d1) ? d1 : 120;
      //  var classic = parseDict.TryGetValue("classic", out var c) && bool.TryParse(c, out var c1) && c1;

      //  var minLength = parseDict.TryGetValue("minLength", out var ml) && int.TryParse(ml, out var ml1) ? ml1 : 3;

      //  _startGameAction = new StartGameAction(sv, width, height, classic, duration, minLength);
      //}
    }

  private StartGameAction? _startGameAction = null;

    private bool _cheat;
}
